package main

import (
	"fmt"
	// "sync"
	"time"
)

func main() {
   // var wg sync.WaitGroup
   c := make(chan int)
   s := time.Now()
   // wg.Add(1)

      // defer wg.Done()
   go task1(c)
   go task2(c)
   go task3(c)
   go task4(c)

   <- c
   <- c
   <- c
   <- c
   // wg.Wait()
   res := time.Since(s)
   fmt.Println("all done in msecs " , res )
}

func task1( c chan int ){
   time.Sleep(time.Millisecond * 500)
   fmt.Println("task 1 completed")
   c <- 1
}

func task2(c chan int ){
   time.Sleep(time.Millisecond * 300)
   fmt.Println("task 2 completed")
   c <- 2
}

func task3(c chan int ){
   fmt.Println("task 3 completed")
   c <- 3
}

func task4(c chan int ){
   time.Sleep(time.Millisecond * 50)
   fmt.Println("task 4 completed")
   c <- 4
}